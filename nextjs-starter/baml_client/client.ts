/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
/* eslint-disable */
import { BamlRuntime, FunctionResult, BamlCtxManager, BamlStream } from "@boundaryml/baml"
import {Education, Message, Resume, Category, Role} from "./types"

export class BamlClient {
  private stream_client: BamlStreamClient

  constructor(private runtime: BamlRuntime, private ctx_manager: BamlCtxManager) {
    this.stream_client = new BamlStreamClient(runtime, ctx_manager)
  }

  get stream() {
    return this.stream_client
  }  

  
  async ClassifyMessage(
      convo: Message[]
  ): Promise<Category[]> {
    const raw = await this.runtime.callFunction(
      "ClassifyMessage",
      {
        "convo": convo,
      },
      this.ctx_manager.get(),
    )
    return raw.parsed() as Category[]
  }
  
  async ExtractResume(
      raw_text: string
  ): Promise<Resume> {
    const raw = await this.runtime.callFunction(
      "ExtractResume",
      {
        "raw_text": raw_text,
      },
      this.ctx_manager.get(),
    )
    return raw.parsed() as Resume
  }
  
}

class BamlStreamClient {
  constructor(private runtime: BamlRuntime, private ctx_manager: BamlCtxManager) {}

  
  ClassifyMessage(
      convo: Message[]
  ): BamlStream<(Category | null)[], Category[]> {
    const raw = this.runtime.streamFunction(
      "ClassifyMessage",
      {
        "convo": convo,
      },
      undefined,
      this.ctx_manager.get(),
    )
    return new BamlStream<(Category | null)[], Category[]>(
      raw,
      (a): a is (Category | null)[] => a,
      (a): a is Category[] => a,
      this.ctx_manager.get(),
    )
  }
  
  ExtractResume(
      raw_text: string
  ): BamlStream<(Partial<Resume> | null), Resume> {
    const raw = this.runtime.streamFunction(
      "ExtractResume",
      {
        "raw_text": raw_text,
      },
      undefined,
      this.ctx_manager.get(),
    )
    return new BamlStream<(Partial<Resume> | null), Resume>(
      raw,
      (a): a is (Partial<Resume> | null) => a,
      (a): a is Resume => a,
      this.ctx_manager.get(),
    )
  }
  
}