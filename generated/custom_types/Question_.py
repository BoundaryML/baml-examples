
# This file is autogenerated by the gloo compiler
# Do not edit this file directly
# (skip unused imports)
# ruff: noqa: F401
# flake8: noqa
# pylint: skip-file
# isort: skip_file


import typing
from pydantic import BaseModel
from gloo_py.stringify import (
    StringifyBase,
    StringifyError,
    StringifyNone,
    StringifyBool,
    StringifyInt,
    StringifyChar,
    StringifyString,
    StringifyFloat,
    StringifyEnum,
    StringifyUnion,
    StringifyOptional,
    StringifyList,
    StringifyClass,
    FieldDescription,
    EnumFieldDescription,
    StringifyRemappedField,
    StringifyCtx
)

class Question(BaseModel):
    info: str
    query: str
    

class StringifyQuestion(StringifyClass[Question]):
    def __init__(self, **update_kwargs: StringifyRemappedField) -> None:
        values: typing.Dict[str, FieldDescription[typing.Any]] = {"info": FieldDescription(name="info", description=None, type_desc=StringifyString()),"query": FieldDescription(name="query", description=None, type_desc=StringifyString()),}
        super().__init__(model=Question, values=values, updates=update_kwargs)
