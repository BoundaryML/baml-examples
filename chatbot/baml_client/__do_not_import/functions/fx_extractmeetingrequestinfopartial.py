# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..types.classes.cls_conversation import Conversation
from ..types.classes.cls_meetingrequestpartial import MeetingRequestPartial
from ..types.classes.cls_message import Message
from ..types.enums.enm_usertype import UserType
from baml_lib._impl.functions import BaseBAMLFunction
from typing import Protocol, runtime_checkable


IExtractMeetingRequestInfoPartialOutput = MeetingRequestPartial

@runtime_checkable
class IExtractMeetingRequestInfoPartial(Protocol):
    """
    This is the interface for a function.

    Args:
        convo: Conversation
        now: str

    Returns:
        MeetingRequestPartial
    """

    async def __call__(self, *, convo: Conversation, now: str) -> MeetingRequestPartial:
        ...


class IBAMLExtractMeetingRequestInfoPartial(BaseBAMLFunction[MeetingRequestPartial]):
    def __init__(self) -> None:
        super().__init__(
            "ExtractMeetingRequestInfoPartial",
            IExtractMeetingRequestInfoPartial,
            ["v1"],
        )

    async def __call__(self, *args, **kwargs) -> MeetingRequestPartial:
        return await self.get_impl("v1").run(*args, **kwargs)

BAMLExtractMeetingRequestInfoPartial = IBAMLExtractMeetingRequestInfoPartial()

__all__ = [ "BAMLExtractMeetingRequestInfoPartial" ]
