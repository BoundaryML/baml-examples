# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..types.classes.cls_attendee import Attendee
from ..types.classes.cls_audience import Audience
from ..types.classes.cls_thing import Thing
from baml_lib._impl.functions import BaseBAMLFunction
from typing import Protocol, runtime_checkable


IThingyOutput = str

@runtime_checkable
class IThingy(Protocol):
    """
    This is the interface for a function.

    Args:
        arg: Audience

    Returns:
        str
    """

    async def __call__(self, arg: Audience, /) -> str:
        ...


class IBAMLThingy(BaseBAMLFunction[str]):
    def __init__(self) -> None:
        super().__init__(
            "Thingy",
            IThingy,
            ["simple"],
        )

    async def __call__(self, *args, **kwargs) -> str:
        return await self.get_impl("simple").run(*args, **kwargs)

BAMLThingy = IBAMLThingy()

__all__ = [ "BAMLThingy" ]
