# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..clients.client_main import Main
from ..functions.fx_thingy import BAMLThingy
from ..types.classes.cls_attendee import Attendee
from ..types.classes.cls_audience import Audience
from ..types.classes.cls_thing import Thing
from baml_lib._impl.deserializer import Deserializer


# Impl: simple
# Client: Main
# An implementation of .


__prompt_template = """\
Given a user is trying to schedule a meeting, extract the relevant
information from the query.

Context:
```

``` 

Conversation:
```

```

Output JSON:
string

JSON:\
"""

__input_replacers = {
}


# We ignore the type here because baml does some type magic to make this work
# for inline SpecialForms like Optional, Union, List.
__deserializer = Deserializer[str](str)  # type: ignore






@BAMLThingy.register_impl("simple")
async def simple(arg: Audience, /) -> str:
    response = await Main.run_prompt_template(template=__prompt_template, replacers=__input_replacers, params=dict(arg=arg))
    deserialized = __deserializer.from_string(response.generated)
    return deserialized
