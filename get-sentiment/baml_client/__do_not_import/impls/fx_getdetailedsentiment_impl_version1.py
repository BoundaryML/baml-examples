# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..clients.client_gpt4 import GPT4
from ..functions.fx_getdetailedsentiment import BAMLGetDetailedSentiment
from ..types.classes.cls_detailedsentiment import DetailedSentiment
from baml_lib._impl.deserializer import Deserializer


# Impl: version1
# Client: GPT4
# An implementation of .


__prompt_template = """\
What do you think the sentiment of 'text' is?
text: {arg}

Answer in JSON format:
{
  "sentiment_score": float,
  // Summary in one word
  "summary": string
}\
"""

__input_replacers = {
    "{arg}"
}


# We ignore the type here because baml does some type magic to make this work
# for inline SpecialForms like Optional, Union, List.
__deserializer = Deserializer[DetailedSentiment](DetailedSentiment)  # type: ignore






@BAMLGetDetailedSentiment.register_impl("version1")
async def version1(arg: str, /) -> DetailedSentiment:
    response = await GPT4.run_prompt_template(template=__prompt_template, replacers=__input_replacers, params=dict(arg=arg))
    deserialized = __deserializer.from_string(response.generated)
    return deserialized
